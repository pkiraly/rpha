<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="2.0"
                xmlns:marc="http://www.loc.gov/MARC21/slim"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:php="http://php.net/xsl"
                exclude-result-prefixes="php marc">

  <xsl:output method="html" indent="no" encoding="utf-8"/>

<xsl:template match="/">
	<xsl:comment>* generated by RPHA - xml2html.xsl *</xsl:comment>
	<xsl:apply-templates select="repert/rec[1]" />
</xsl:template>
  
<xsl:template match="rec">
<div class="szintezis">
	<xsl:if test="v1">
		<xsl:attribute name="id">
			<xsl:text>n</xsl:text>
			<xsl:value-of select="number(substring(v1/@value, 1, 4))" />
		</xsl:attribute>
	</xsl:if>
	<h3><span>syntheticum</span></h3>
	<xsl:text>&#xa;</xsl:text>

	<h1>
		<!-- ID -->
		<xsl:comment>ID</xsl:comment>
		<xsl:if test="v1">
			<xsl:value-of select="number(substring(v1/@value, 1, 4))" />
		</xsl:if>
		<!-- incipit -->
		<xsl:comment>incipit</xsl:comment>
		<xsl:if test="v2">
			<xsl:text> </xsl:text>
			<xsl:value-of select="v2/@value" />
		</xsl:if>
		<!-- cím -->
		<xsl:comment>cím</xsl:comment>
		<xsl:if test="v3">
			<!-- TODO: &#x96; -->
			<xsl:text> – </xsl:text>
			
			<xsl:for-each select="v3">
				<xsl:if test="position() &gt; 1">
					<xsl:text>; </xsl:text>
				</xsl:if>
				<xsl:choose>
					<xsl:when test="substring(./@value, 1, 2) = 'Ps'">
						<xsl:value-of select="substring(./@value, 1, 3)" />
						<xsl:value-of select="number(substring(./@value, 4, 3))" />
						<xsl:text>=</xsl:text>
						<xsl:value-of select="number(substring(./@value, 8, 3))" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="./@value" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
		</xsl:if>
	</h1>
	<xsl:text>&#xa;</xsl:text>
	
	<h2>Irodalomtörténeti adatok</h2>
	<xsl:text>&#xa;</xsl:text>
	<p>
		<!-- szerző -->
		<xsl:comment>szerző</xsl:comment>
		<xsl:choose>
			<xsl:when test="v5">
				<xsl:for-each select="v5">
					<!-- &hucode('v24='v24), -->
					<xsl:apply-templates select="../v24" mode="hucode" />

					<xsl:if test="position() &gt; 1">
						<xsl:text>, </xsl:text>
					</xsl:if>
					<a>
						<xsl:attribute name="href">
							<xsl:text>BASE_PATH/search.do?</xsl:text>
							<xsl:if test="@s1">
								<xsl:value-of select="concat('&amp;fields[]=v5_s1&amp;values[]=', @s1)" />
							</xsl:if>
							<xsl:if test="@s2">
								<xsl:value-of select="concat('&amp;fields[]=v5_s2&amp;values[]=', @s2)" />
							</xsl:if>
						</xsl:attribute>
					<xsl:if test="@s3">
						<xsl:text> </xsl:text>
						<xsl:value-of select="@s3" />
					</xsl:if>
					<xsl:if test="@s1">
						<xsl:text> </xsl:text>
						<xsl:value-of select="@s1" />
					</xsl:if>
					<xsl:if test="@s2">
						<xsl:text> </xsl:text>
						<xsl:value-of select="@s2" />
					</xsl:if>
					</a>
				</xsl:for-each>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>Szerzője ismeretlen</xsl:text>
			</xsl:otherwise>
		</xsl:choose>

		<!-- kinek ajánlotta? -->
		<xsl:comment>kinek ajánlotta?</xsl:comment>
		<xsl:if test="v31">
			<xsl:text>, a címzett neve </xsl:text>
			<xsl:for-each select="v31">
				<xsl:value-of select="@value" />
				<xsl:if test="position() != last()">
					<xsl:text>, </xsl:text>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
		
		<xsl:if test="not(v31)">
			<xsl:text>, nem dedikált</xsl:text>
		</xsl:if>

		<xsl:text>.&#xa;</xsl:text>
		<xsl:comment>/kinek ajánlotta?</xsl:comment>

		<xsl:if test="number(v11/@value) &gt; 1">
			<xsl:comment>Idegen minta</xsl:comment>
			<xsl:text>Idegen minta: </xsl:text>
			
			<!-- begin repeatable -->

			<xsl:choose>
				<!-- a mintának nincs címe -->
				<xsl:when test="not(v13)">
					<!-- a minta kezdősora -->
					<xsl:for-each select="v12">
						<xsl:if test="position() &gt; 1">
							<xsl:text>; </xsl:text>
						</xsl:if>
						<span class="v12"><xsl:value-of select="@value" /></span>
					</xsl:for-each>
				</xsl:when>
				<!-- a minta címe -->
				<xsl:otherwise>
					<xsl:for-each select="v13">
						<xsl:if test="position() &gt; 1">
							<xsl:text>; </xsl:text>
						</xsl:if>
						<span class="v13">
							<xsl:choose>
								<xsl:when test="substring(@value, 1, 2) = 'Ps'">
									<xsl:value-of select="substring(@value, 1, 3)" />
									<span class="vulgata"><xsl:value-of select="number(substring(@value, 4, 3))" /></span>
									<xsl:text>=</xsl:text>
									<span class="hebraica"><xsl:value-of select="number(substring(@value, 8, 3))" /></span>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="./@value" />
								</xsl:otherwise>
							</xsl:choose>
						</span>
					</xsl:for-each>
				</xsl:otherwise>
			</xsl:choose>
			
			<xsl:if test="v12 | v13">
				<xsl:for-each select="v15">
					<xsl:text>: </xsl:text>
					<span class="v15">
						<xsl:if test="./@s3">
							<xsl:text> </xsl:text>
							<xsl:value-of select="./@s3" />
						</xsl:if>
						<xsl:if test="./@s2">
							<xsl:text> </xsl:text>
							<xsl:value-of select="./@s2" />
						</xsl:if>
						<xsl:if test="./@s1">
							<xsl:text> </xsl:text>
							<xsl:value-of select="./@s1" />
						</xsl:if>
					</span>
				</xsl:for-each>
			</xsl:if>
			
			<!-- TODOs -->
			<!-- end repeatable -->

			<xsl:if test="v11/@value = 3">
				<xsl:text>nincs azonosítva</xsl:text>
			</xsl:if>
			<xsl:if test="v11/@value = 1">
				<xsl:text> eredeti</xsl:text>
			</xsl:if>
			<xsl:if test="not(v12) and not(v13) and (v11/@value = 2)">
				<xsl:text>fordítás, de nincs azonosítva</xsl:text>
			</xsl:if>
			<xsl:text>.&#xa;</xsl:text>
			
			<!-- himnusz utalószáma -->
			<xsl:if test="v14">
				<xsl:for-each select="v14">
					<xsl:if test="position() > 1">
						<xsl:text>, </xsl:text>
					</xsl:if>
					<span class="v14 hymn"><xsl:apply-templates select="@value" mode="hymnd"/></span>
				</xsl:for-each>
				<xsl:text>.&#xa;</xsl:text>
			</xsl:if>
			<xsl:comment>/Idegen minta</xsl:comment>
		</xsl:if>

		<!-- hivatkozás más 1601 előtti versre (pl. ugyanannak a versnek a fordítása) -->
		<xsl:if test="v162">
			<xsl:comment>hivatkozás más 1601 előtti versre</xsl:comment>
			<xsl:text>Lásd: </xsl:text>
			<xsl:for-each select="v162">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="$ref/v2">
					<xsl:value-of select="$ref/v2/@value" />
				</xsl:if>
				<xsl:if test="not($ref/v2)">
					<xsl:value-of select="$ref/v3/@value" />
				</xsl:if>
				<xsl:text> (</xsl:text>
					<a>
						<xsl:attribute name="href">
							<xsl:value-of select="concat('BASE_PATH/id/', $ref/v1/@value)" />
						</xsl:attribute>
						<xsl:value-of select="number($ref/v1/@value)" />
					</a>
				<xsl:text>)</xsl:text>
			</xsl:for-each>
			<xsl:text>.&#xa;</xsl:text>
			<xsl:comment>/hivatkozás más 1601 előtti versre</xsl:comment>
		</xsl:if>

		<!-- van-e achrosztikon? -->
		<xsl:comment>van-e achrosztikon?</xsl:comment>
		<xsl:apply-templates select="v33" mode="hucode" />
		<xsl:comment>/van-e achrosztikon?</xsl:comment>

		<!-- achrosztikon: -->
		<xsl:if test="v34">
			<xsl:comment>achrosztikon</xsl:comment>
			<xsl:text>: </xsl:text>
			<xsl:value-of select="v34/@value" />
			<xsl:comment>/achrosztikon</xsl:comment>
		</xsl:if>

		<!-- nem tudjuk, hogy van-e achrosztikon -->
		<xsl:if test="number(v33/@value) = 3">
			<xsl:comment>nem tudjuk, hogy van-e achrosztikon</xsl:comment>
			<xsl:if test="v34">
				<xsl:text> ? </xsl:text>
			</xsl:if>
			<xsl:if test="not(v34)">
				<xsl:text>.&#xa;</xsl:text>
			</xsl:if>
			<xsl:comment>/nem tudjuk, hogy van-e achrosztikon</xsl:comment>
		</xsl:if>

		<xsl:if test="number(v33/@value) != 3">
			<xsl:comment>van/nincs achrosztikon</xsl:comment>
			<xsl:if test="v33">
				<xsl:text>.&#xa;</xsl:text>
			</xsl:if>
			<xsl:comment>van/nincs achrosztikon</xsl:comment>
		</xsl:if>

		<!-- van-e kolofon? -->
		<xsl:comment>kolofon</xsl:comment>
		<xsl:apply-templates select="v30" mode="hucode" />
		
		<!-- kolofon -->
		<xsl:for-each select="v32">
			<xsl:if test="@sL">
				<xsl:text>; hely: </xsl:text>
				<xsl:value-of select="@sL" />
			</xsl:if>
			<xsl:if test="@sd">
				<xsl:text>; idő: </xsl:text>
				<xsl:value-of select="@sd" />
			</xsl:if>
			<xsl:if test="@s1">
				<xsl:text>; szerző: </xsl:text>
				<xsl:value-of select="@s1" />
			</xsl:if>
		</xsl:for-each>

		<xsl:if test="v33|v34|v30|v32">
			<xsl:text>.&#xa;</xsl:text>
		</xsl:if>
		<xsl:comment>/kolofon</xsl:comment>
		<!-- /kolofon -->

		<!-- a vers szereztetésének ideje -->
		<xsl:if test="v21">
			<xsl:text>Keletkezési idő </xsl:text>
			<xsl:apply-templates select="v22" mode="hucode" />
			<xsl:for-each select="v21">
				<xsl:value-of select="@value" />
				<xsl:if test="position() != last()">
					<xsl:text> vagy </xsl:text>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
		<xsl:if test="not(v21)">
			<xsl:text>A vers keletkezési ideje nem ismert</xsl:text>
		</xsl:if>
		<xsl:text>.&#xa;</xsl:text>

		<!-- hivatkozás más 1601 előtti versre (rész-egész viszony) -->
		<xsl:if test="v161">
			<xsl:text>Lásd még: </xsl:text>
			<xsl:for-each select="v161">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:value-of select="$ref/v2/@value" />
				<xsl:text> (</xsl:text>
					<a>
						<xsl:attribute name="href">
							<xsl:value-of select="concat('BASE_PATH/id/', $ref/v1/@value)" />
						</xsl:attribute>
						<xsl:value-of select="number($ref/v1/@value)" />
					</a>
				<xsl:text>)</xsl:text>
			</xsl:for-each>
			<xsl:text>.&#xa;</xsl:text>
		</xsl:if>
	</p><xsl:text>&#xa;</xsl:text>

	<h2>Metrum és műfaj</h2><xsl:text>&#xa;</xsl:text>
	<p>
		<!-- metrum típusa -->
		<xsl:apply-templates select="v44" mode="hucode" />
		
		<!-- váltakozó metrumú -->
		<xsl:if test="v44/@value = 15">
			<xsl:for-each select="v165">
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="substring($ref/v1/@value, 5) = 'a'">
					<xsl:if test="$ref/v44/@value = '1'">
						<xsl:text>szótagszámláló, izo-stofikus </xsl:text>
					</xsl:if>
					<xsl:if test="not($ref/v44/@value = '1')">
						<xsl:text>időmértékes </xsl:text>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>

		<!-- énekelt vers vagy szövegvers -->
		<xsl:if test="v44">
			<xsl:apply-templates select="v23" mode="hucode" />
		</xsl:if>
		<xsl:if test="not(v44)">
			<!-- TODO -->
			<xsl:apply-templates select="v23" mode="hucode" />
		</xsl:if>
		<!-- /metrum típusa -->
	</p>
	<xsl:text>&#xa;</xsl:text>

	<!-- nótajelzés -->
	<xsl:if test="v61">
		<p>
			<xsl:if test="count(v61) > 1">
				<i>Nótajelzései</i>
				<xsl:text>: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v61) > 1)">
				<xsl:text>Nótajelzése: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v61">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:variable name="refid" select="./@s1" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="$ref/v2">
					<xsl:value-of select="$ref/v2/@value" />
				</xsl:if>
				<xsl:if test="not($ref/v2)">
					<xsl:value-of select="$ref/v3/@value" />
				</xsl:if>
				<xsl:text> (</xsl:text>
				<a>
					<xsl:attribute name="href">
						<xsl:value-of select="concat('BASE_PATH/id/', $ref/v1/@value)" />
					</xsl:attribute>
					<xsl:value-of select="$ref/v1/@value" />
				</a>
				<xsl:text>)</xsl:text>
			</xsl:for-each>
			<xsl:text>.&#xa;</xsl:text>
		</p>
		<xsl:text>&#xa;</xsl:text>
	</xsl:if>

	<!-- a verset nótajelzésként használó versek -->
	<xsl:if test="v65">
		<p>
			<xsl:if test="count(v65) > 1">
				<i>Nótajelzésként hivatkoznak a versre</i><xsl:text>: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v65) > 1)">
				<i>Nótajelzésként hivatkozik a versre</i><xsl:text>: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v65">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="$ref/v2">
					<xsl:value-of select="$ref/v2/@value" />
				</xsl:if>
				<xsl:if test="not($ref/v2)">
					<xsl:value-of select="$ref/v3/@value" />
				</xsl:if>
				<xsl:text> (</xsl:text>
					<a>
						<xsl:attribute name="href">
							<xsl:value-of select="concat('BASE_PATH/id/', $ref/v1/@value)" />
						</xsl:attribute>
						<xsl:value-of select="number($ref/v1/@value)" />
					</a>
				<xsl:text>)</xsl:text>
			</xsl:for-each>
			<xsl:text>.&#xa;</xsl:text>
		</p>
	</xsl:if>

	<p>
		<!-- teljes-e a vers szövege? -->
		<xsl:apply-templates select="v41" mode="hucode" />

		<!-- terjedelem -->
		<xsl:text>terjedelme </xsl:text>
		<!-- TODO: v42+|, |,x1, -->
		<xsl:for-each select="v42">
			<xsl:if test="position() > 1">
				<xsl:text>, </xsl:text>
			</xsl:if>
			<xsl:value-of select="@value" />
		</xsl:for-each>
		<xsl:text> </xsl:text>
		<!-- terjedelem mértékegysége -->
		<xsl:choose>
			<xsl:when test="number(v43/@value) = 1">
			 	<xsl:text>strófa</xsl:text>	
			</xsl:when>
			<xsl:when test="number(v43/@value) = 2">
			 	<xsl:text>sor</xsl:text>	
			</xsl:when>
			<xsl:when test="number(v43/@value) = 3">
			 	<xsl:text>bekezdés</xsl:text>	
			</xsl:when>
		</xsl:choose>
		<xsl:text>.&#xa;</xsl:text>	
		
		<!-- echós szerkezetű-e? -->
		<xsl:if test="v164">
			<xsl:text>Ekhós vers.&#xa;</xsl:text>
		</xsl:if>

		<!-- refrénszerkezet -->
		<xsl:if test="v163">
			<xsl:text>Refrénes.&#xa;</xsl:text>
		</xsl:if>
	</p><xsl:text>&#xa;</xsl:text>

		<xsl:if test="v44">
		<p>
		<!-- metrumképlet -->
		<xsl:if test="v44/@value = 15">
			<xsl:for-each select="v165">
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="substring($ref/v1/@value, 5) = 'a'">
					<xsl:if test="$ref/v45/@value">
						<xsl:text>Metrumképlete:</xsl:text>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
		<xsl:if test="not(v44/@value = 15)">
			<xsl:if test="(v43/@value = 1) and v45">
				<xsl:text>Metrumképlete:</xsl:text>
			</xsl:if>
			<xsl:if test="v43/@value = 2 and v45">
				<xsl:text>Metrumképlete:</xsl:text>
			</xsl:if>
		</xsl:if>
		</p><xsl:text>&#xa;</xsl:text>
		</xsl:if>

		<xsl:if test="v44/@value = 15">
			<xsl:for-each select="v165">
				<xsl:variable name="refid" select="@value" />
				<xsl:variable name="ref" select="//rec[v1/@value=$refid]" />
				<xsl:if test="substring($ref/v1/@value, 5) = 'a'">
					<div>
						<xsl:apply-templates select="$ref/v45" mode="metrd" />
					</div><xsl:text>&#xa;</xsl:text>
				</xsl:if>
			</xsl:for-each>
		</xsl:if>
		<xsl:if test="not(v44/@value = 15)">
			<div>
				<xsl:apply-templates select="v45" mode="metrd" />
			</div><xsl:text>&#xa;</xsl:text>
		</xsl:if>

		<xsl:if test="v28">
			<p>
			<xsl:text>Műfaji besorolása: </xsl:text>
			<xsl:for-each select="v28">
				<blockquote style="margin-top: 0; margin-bottom: 0;">
				<!--
				<xsl:if test="position() != 1">
					<xsl:text><br/></xsl:text>
				</xsl:if>
				-->
				<!-- TODO -->
				<xsl:if test="substring(@value, 1, 2) = '00'">
					<xsl:call-template name="humuf">
						<xsl:with-param name="codes" select="@value" />
						<xsl:with-param name="type" select="'1'" />
					</xsl:call-template>
				</xsl:if>
				<xsl:if test="substring(@value, 1, 2) != '00'">
					<xsl:call-template name="humuf">
						<xsl:with-param name="codes" select="@value" />
						<xsl:with-param name="type" select="'2'" />
					</xsl:call-template>
				</xsl:if>
				</blockquote>
			</xsl:for-each>
			<xsl:text>.</xsl:text>
			</p><xsl:text>&#xa;</xsl:text>
		</xsl:if>

	<xsl:if test="v51 or v52 or v53 or v54">
		<h2>Bibliográfia</h2><xsl:text>&#xa;</xsl:text>
	</xsl:if>

	<xsl:if test="v48">
		<p><xsl:apply-templates select="v48" mode="humego"/></p><xsl:text>&#xa;</xsl:text>
	</xsl:if>
	
	<xsl:if test="v52">
		<p>
			<xsl:if test="count(v52) > 1">
				<xsl:text>Kéziratos forrásai: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v52) > 1)">
				<xsl:text>Kéziratos forrása: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v52">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:call-template name="hubook">
					<xsl:with-param name="id" select="../v1/@value"/>
					<xsl:with-param name="value" select="./@value"/>
					<xsl:with-param name="bookId" select="./@bookId"/>
				</xsl:call-template>
			</xsl:for-each>
			<xsl:text>.</xsl:text>
		</p><xsl:text>&#xa;</xsl:text>
	</xsl:if>

	<xsl:if test="v51">
		<p>
			<xsl:if test="count(v51) > 1">
				<xsl:text>Nyomtatott kiadásai: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v51) > 1)">
				<xsl:text>Nyomtatott kiadása: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v51">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:call-template name="hubook">
					<xsl:with-param name="id" select="../v1/@value"/>
					<xsl:with-param name="value" select="@value"/>
					<xsl:with-param name="bookId" select="./@bookId"/>
				</xsl:call-template>
			</xsl:for-each>
			<xsl:text>.</xsl:text>
		</p><xsl:text>&#xa;</xsl:text>
	</xsl:if>

	<xsl:if test="v54">
		<p>
			<xsl:if test="count(v54) > 1">
				<xsl:text>Modern kiadásai: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v54) > 1)">
				<xsl:text>Modern kiadása: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v54">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:value-of select="@value"/>
			</xsl:for-each>
			<xsl:text>.</xsl:text>
		</p><xsl:text>&#xa;</xsl:text>
	</xsl:if>

	<xsl:if test="v53">
		<p>
			<xsl:if test="count(v53) > 1">
				<xsl:text>A dallam kiadásai: </xsl:text>
			</xsl:if>
			<xsl:if test="not(count(v53) > 1)">
				<xsl:text>A dallam kiadása: </xsl:text>
			</xsl:if>
			<xsl:for-each select="v53">
				<xsl:if test="position() > 1">
					<xsl:text>, </xsl:text>
				</xsl:if>
				<xsl:apply-templates mode="rmdt" select="."/>
			</xsl:for-each>
			<xsl:text>.</xsl:text>
		</p><xsl:text>&#xa;</xsl:text>
	</xsl:if>
</div><xsl:text>&#xa;</xsl:text>
</xsl:template>

<xsl:template match="v22|v23|v24|v30|v33|v41|v44|v163" mode="hucode">
	<xsl:choose>
		<xsl:when test="name(.) = 'v22'">
			<xsl:if test="@value = 1"></xsl:if>
	        <xsl:if test="@value = 2">nem később, mint </xsl:if>
	        <xsl:if test="@value = 3">nem korábban, mint </xsl:if>
	        <xsl:if test="@value = 4">kb. </xsl:if>
	        <xsl:if test="@value = 5">korábban, mint kb. </xsl:if>
	        <xsl:if test="@value = 6"></xsl:if>
	        <xsl:if test="@value = 7">vagy </xsl:if>
		</xsl:when>
		<xsl:when test="name(.)  = 'v23'">
			<xsl:if test="@value = 1">szövegvers. </xsl:if>
	        <xsl:if test="@value = 2">énekvers. </xsl:if>
	        <xsl:if test="@value = 3">bizonytalan, hogy énekelték-e. </xsl:if>
	        <xsl:if test="@value = 4">Szövegvers. </xsl:if>
	        <xsl:if test="@value = 5">Énekvers. </xsl:if>
	        <xsl:if test="@value = 6">Bizonytalan, hogy énekelték-e. </xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v24'">
			<xsl:if test="@value = 1">Szerezte</xsl:if>
	        <xsl:if test="@value = 2"></xsl:if>
	        <xsl:if test="@value = 3">A korabeli hagyomány szerint szerezte</xsl:if>
	        <xsl:if test="@value = 4">A modern kutatás szerint szerezte</xsl:if>
	        <xsl:if test="@value = 5">A kötet szignálása szerint szerezte</xsl:if>
	        <xsl:if test="@value = 6">Az anagramma feloldása szerint szerezte</xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v30'">
			<xsl:if test="@value = 1">A kolofon tájékoztat a szereztetés körülményeiről</xsl:if>
	        <xsl:if test="@value = 2">Nincs kolofon</xsl:if>
	        <xsl:if test="@value = 3">A kolofon léte bizonytalan</xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v33'">
			<xsl:if test="@value = 1">Akrosztichonja</xsl:if>
	        <xsl:if test="@value = 2">Nincs akrosztichonja</xsl:if>
	        <xsl:if test="@value = 3">Az akrosztichon léte bizonytalan</xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v41'">
			<xsl:if test="@value = 1">A szöveg teljes </xsl:if>
	        <xsl:if test="@value = 2">A szöveg töredék </xsl:if>
	        <xsl:if test="@value = 3">A szöveg töredék, de ismerjük a teljes terjedelmet, </xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v44'">
			<xsl:if test="@value = 1">Szótagszámláló, izo-strofikus, </xsl:if>
	        <xsl:if test="@value = 3">Bizonytalan, hogy vers vagy próza, </xsl:if>
	        <xsl:if test="@value = 4">Bizonytalan verselésű, időmértékes, </xsl:if>
	        <xsl:if test="@value = 5">Bizonytalan verselésű, szótagszámláló, izostofikus, </xsl:if>
	        <xsl:if test="@value = 6">Hexameter </xsl:if>
	        <xsl:if test="@value = 7">Disztichon </xsl:if>
	        <xsl:if test="@value = 8">Időmértékes, de nem hexameter vagy disztichon, </xsl:if>
	        <xsl:if test="@value = 10">Hangsúlyos, nem strofikus, nem szótagszámláló rímtelen, </xsl:if>
	        <xsl:if test="@value = 11">Bizonytalan, hogy vers vagy ritmikus próza, </xsl:if>
	        <xsl:if test="@value = 12">Verssorok és próza váltakozása, </xsl:if>
	        <xsl:if test="@value = 15">Váltakozó metrumú </xsl:if>
	        <xsl:if test="@value = 16">Szótagszámláló tendenciát mutató, </xsl:if>
	        <xsl:if test="@value = 17">Szótagszámláló, </xsl:if>
	        <xsl:if test="@value = 18">Szószámláló, </xsl:if>
	        <xsl:if test="@value = 19">Szekvenciát imitáló, </xsl:if>
	        <xsl:if test="@value = 30">Nótajelzés, a metruma kikövetkeztetett, </xsl:if>
		</xsl:when>
		<xsl:when test="name(.) = 'v163'">
			<xsl:if test="@value = '--'">A sorban nincs refrén.</xsl:if>
	        <xsl:if test="@value = 'R0'">Refrénes sor.</xsl:if>
	        <xsl:if test="@value = 'R1'">Szabályosan váltakozó rímes refrén.</xsl:if>
	        <xsl:if test="@value = 'R2'">Időnként refrénnel ellátott sor.</xsl:if>
	        <xsl:if test="@value = 'R3'">Szabálytalanul váltakozó refrén.</xsl:if>
	        <xsl:if test="@value = 'R4'">Metrumot nem tudunk megállapítani, de a vers refrénes szerkezető lehetett.</xsl:if>
	        <xsl:if test="@value = 'I0'">Megismátelt sor.'</xsl:if>
		</xsl:when>
	</xsl:choose>
</xsl:template>

<xsl:template match="v14" mode="hymnd">
	<xsl:if test="substring(., 1, 2) = 'AH'">
		<xsl:text>AH, t. </xsl:text>
		<xsl:value-of select="substring-before(substring(., 4), ',')" />
		<xsl:text> p. </xsl:text>
		<xsl:value-of select="substring-after(substring(., 4), ',')" />
	</xsl:if>
	<xsl:if test="substring(., 1, 2) = 'CH'">
		<xsl:text>Ch #</xsl:text>
		<xsl:value-of select="substring(., 4)" />
	</xsl:if>
</xsl:template>

<xsl:template name="humuf">
	<xsl:param name="codes" />
	<xsl:param name="type" />
	
	<xsl:for-each select="tokenize($codes, ',')">
		<xsl:if test="position() > 1">
			<xsl:text> &gt; </xsl:text>
		</xsl:if>
		<xsl:if test="number($type) = 1">
			<xsl:call-template name="humuf1codes">
				<xsl:with-param name="code" select="number(.)" />
			</xsl:call-template>
		</xsl:if>
		<xsl:if test="number($type) = 2">
			<xsl:call-template name="humuf2codes">
				<xsl:with-param name="code" select="number(.)" />
			</xsl:call-template>
		</xsl:if>
	</xsl:for-each>
</xsl:template>

<xsl:template name="humuf1codes">
	<xsl:param name="code" />
	
	<xsl:choose>
		<xsl:when test="$code = 1"><xsl:text>vallásos</xsl:text></xsl:when>
		<xsl:when test="$code = 2"><xsl:text>história</xsl:text></xsl:when>
		<xsl:when test="$code = 3"><xsl:text>nem história</xsl:text></xsl:when>
		<xsl:when test="$code = 4"><xsl:text>elbeszélő</xsl:text></xsl:when>
		<xsl:when test="$code = 5"><xsl:text>leíró vagy értekező</xsl:text></xsl:when>
		<xsl:when test="$code = 6"><xsl:text>bibliai</xsl:text></xsl:when>
		<xsl:when test="$code = 8"><xsl:text>liturgikus vagy paraliturgikus eredetű</xsl:text></xsl:when>
		<xsl:when test="$code = 9"><xsl:text>bibliai</xsl:text></xsl:when>
		<xsl:when test="$code = 10"><xsl:text>prédikációs ének</xsl:text></xsl:when>
		<xsl:when test="$code = 13"><xsl:text>zsoltár</xsl:text></xsl:when>
		<xsl:when test="$code = 14"><xsl:text>jeremiád</xsl:text></xsl:when>
		<xsl:when test="$code = 15"><xsl:text>rövid foglalat</xsl:text></xsl:when>
		<xsl:when test="$code = 16"><xsl:text>himnusz</xsl:text></xsl:when>
		<xsl:when test="$code = 17"><xsl:text>antifona</xsl:text></xsl:when>
		<xsl:when test="$code = 18"><xsl:text>szekvencia</xsl:text></xsl:when>
		<xsl:when test="$code = 23"><xsl:text>dogmatika</xsl:text></xsl:when>
		<xsl:when test="$code = 24"><xsl:text>alkalmi ének</xsl:text></xsl:when>
		<xsl:when test="$code = 25"><xsl:text>mindennapi vagy ünnepnapi lelki ének</xsl:text></xsl:when>
		<xsl:when test="$code = 26"><xsl:text>Urvacsora-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 27"><xsl:text>káté-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 28"><xsl:text>Szent Háromság-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 29"><xsl:text>Credo magyarázat</xsl:text></xsl:when>
		<xsl:when test="$code = 30"><xsl:text>Miatyánk-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 31"><xsl:text>Tízparancsolat-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 32"><xsl:text>házasének</xsl:text></xsl:when>
		<xsl:when test="$code = 33"><xsl:text>keresztelési ének</xsl:text></xsl:when>
		<xsl:when test="$code = 34"><xsl:text>bölcsődal</xsl:text></xsl:when>
		<xsl:when test="$code = 35"><xsl:text>temetési ének</xsl:text></xsl:when>
		<xsl:when test="$code = 36"><xsl:text>dicséret</xsl:text></xsl:when>
		<xsl:when test="$code = 37"><xsl:text>hálaadó ének</xsl:text></xsl:when>
		<xsl:when test="$code = 38"><xsl:text>könyörgés</xsl:text></xsl:when>
		<xsl:when test="$code = 39"><xsl:text>vallástétel</xsl:text></xsl:when>
		<xsl:when test="$code = 40"><xsl:text>Szentlélek invokáció</xsl:text></xsl:when>
		<xsl:when test="$code = 41"><xsl:text>tanulság</xsl:text></xsl:when>
		<xsl:when test="$code = 42"><xsl:text>jó keresztyéni cselekedetre intő ének</xsl:text></xsl:when>
		<xsl:when test="$code = 43"><xsl:text>hívők biztatása</xsl:text></xsl:when>
		<xsl:when test="$code = 44"><xsl:text>siralom</xsl:text></xsl:when>
		<xsl:when test="$code = 45"><xsl:text>hívők vigasztalása</xsl:text></xsl:when>
		<xsl:when test="$code = 47"><xsl:text>a világ hiábavalóságáról szóló ének</xsl:text></xsl:when>
		<xsl:when test="$code = 100"><xsl:text>benedicamus</xsl:text></xsl:when>
		<xsl:when test="$code = 102"><xsl:text>imádság</xsl:text></xsl:when>
		<xsl:when test="$code = 103"><xsl:text>muzulmán</xsl:text></xsl:when>
		<xsl:when test="$code = 104"><xsl:text>szerzetesi regula</xsl:text></xsl:when>
		<xsl:when test="$code = 107"><xsl:text>hitvita</xsl:text></xsl:when>
		<xsl:when test="$code = 123"><xsl:text>varázsige</xsl:text></xsl:when>
		<xsl:when test="$code = 124"><xsl:text>Szent király-himnusz</xsl:text></xsl:when>
		<xsl:when test="$code = 125"><xsl:text>legenda</xsl:text></xsl:when>
		<xsl:when test="$code = 126"><xsl:text>Mária-siralom</xsl:text></xsl:when>
		<xsl:when test="$code = 130"><xsl:text>Mária-ének</xsl:text></xsl:when>
		<xsl:when test="$code = 134"><xsl:text>bibliai világkrónika</xsl:text></xsl:when>
		<xsl:when test="$code = 200"><xsl:text>cantio</xsl:text></xsl:when>
		<xsl:when test="$code = 201"><xsl:text>bibliai dráma</xsl:text></xsl:when>
		<xsl:when test="$code = 202"><xsl:text>doxológia</xsl:text></xsl:when>
		<xsl:when test="$code = 203"><xsl:text>vallásos embléma</xsl:text></xsl:when>
		<xsl:when test="$code = 255"><xsl:text>Urfelmutatási ének</xsl:text></xsl:when>
		<xsl:when test="$code = 256"><xsl:text>benedicamus parafrázis</xsl:text></xsl:when>
		<xsl:when test="$code = 257"><xsl:text>asztali áldás</xsl:text></xsl:when>
		<xsl:when test="$code = 258"><xsl:text>Énekek éneke</xsl:text></xsl:when>
		<xsl:when test="$code = 259"><xsl:text>útonjáróknak éneke</xsl:text></xsl:when>
		<xsl:when test="$code = 260"><xsl:text>rabének</xsl:text></xsl:when>
		<xsl:when test="$code = 300"><xsl:text>egyháztörténeti kivonat</xsl:text></xsl:when>
		<xsl:when test="$code = 301"><xsl:text>közel kortársi</xsl:text></xsl:when>
		<xsl:when test="$code = 302"><xsl:text>régi</xsl:text></xsl:when>
	</xsl:choose>
</xsl:template>

<xsl:template name="humuf2codes">
	<xsl:param name="code" />
	
	<xsl:choose>
		<xsl:when test="$code = 48"><xsl:text>világi</xsl:text></xsl:when>
		<xsl:when test="$code = 49"><xsl:text>história</xsl:text></xsl:when>
		<xsl:when test="$code = 50"><xsl:text>nem história</xsl:text></xsl:when>
		<xsl:when test="$code = 51"><xsl:text>elbeszélő</xsl:text></xsl:when>
		<xsl:when test="$code = 52"><xsl:text>leíró vagy értekező</xsl:text></xsl:when>
		<xsl:when test="$code = 53"><xsl:text>morális vagy politikai</xsl:text></xsl:when>
		<xsl:when test="$code = 54"><xsl:text>erotikus</xsl:text></xsl:when>
		<xsl:when test="$code = 56"><xsl:text>nem fiktív</xsl:text></xsl:when>
		<xsl:when test="$code = 57"><xsl:text>kitalált történetmondás</xsl:text></xsl:when>
		<xsl:when test="$code = 58"><xsl:text>arisztokratikus regiszter</xsl:text></xsl:when>
		<xsl:when test="$code = 59"><xsl:text>populáris vagy vágáns</xsl:text></xsl:when>
		<xsl:when test="$code = 61"><xsl:text>humanista iskolai</xsl:text></xsl:when>
		<xsl:when test="$code = 63"><xsl:text>udvari</xsl:text></xsl:when>
		<xsl:when test="$code = 64"><xsl:text>populáris</xsl:text></xsl:when>
		<xsl:when test="$code = 66"><xsl:text>humanista iskolai</xsl:text></xsl:when>
		<xsl:when test="$code = 68"><xsl:text>történelmi</xsl:text></xsl:when>
		<xsl:when test="$code = 69"><xsl:text>kortársi tudósító</xsl:text></xsl:when>
		<xsl:when test="$code = 74"><xsl:text>naptárvers</xsl:text></xsl:when>
		<xsl:when test="$code = 76"><xsl:text>partimen</xsl:text></xsl:when>
		<xsl:when test="$code = 77"><xsl:text>embléma</xsl:text></xsl:when>
		<xsl:when test="$code = 78"><xsl:text>szerelmi köszöntés</xsl:text></xsl:when>
		<xsl:when test="$code = 80"><xsl:text>török beyt fordítása</xsl:text></xsl:when>
		<xsl:when test="$code = 81"><xsl:text>aenigma</xsl:text></xsl:when>
		<xsl:when test="$code = 82"><xsl:text>női dal</xsl:text></xsl:when>
		<xsl:when test="$code = 83"><xsl:text>latrikánus vers</xsl:text></xsl:when>
		<xsl:when test="$code = 84"><xsl:text>gab</xsl:text></xsl:when>
		<xsl:when test="$code = 86"><xsl:text>in laudem</xsl:text></xsl:when>
		<xsl:when test="$code = 87"><xsl:text>hegedős ének</xsl:text></xsl:when>
		<xsl:when test="$code = 88"><xsl:text>vágáns szatíra</xsl:text></xsl:when>
		<xsl:when test="$code = 89"><xsl:text>politikai propaganda</xsl:text></xsl:when>
		<xsl:when test="$code = 90"><xsl:text>epistola dedicatoria</xsl:text></xsl:when>
		<xsl:when test="$code = 91"><xsl:text>tanulság</xsl:text></xsl:when>
		<xsl:when test="$code = 92"><xsl:text>idézet</xsl:text></xsl:when>
		<xsl:when test="$code = 93"><xsl:text>sententia</xsl:text></xsl:when>
		<xsl:when test="$code = 95"><xsl:text>epicedium</xsl:text></xsl:when>
		<xsl:when test="$code = 109"><xsl:text>halotti</xsl:text></xsl:when>
		<xsl:when test="$code = 115"><xsl:text>utazási vers</xsl:text></xsl:when>
		<xsl:when test="$code = 118"><xsl:text>missilis levél</xsl:text></xsl:when>
		<xsl:when test="$code = 119"><xsl:text>alba</xsl:text></xsl:when>
		<xsl:when test="$code = 120"><xsl:text>Horatius-paródia</xsl:text></xsl:when>
		<xsl:when test="$code = 121"><xsl:text>táncdal</xsl:text></xsl:when>
		<xsl:when test="$code = 127"><xsl:text>jogszabály</xsl:text></xsl:when>
		<xsl:when test="$code = 128"><xsl:text>játék</xsl:text></xsl:when>
		<xsl:when test="$code = 129"><xsl:text>csízió</xsl:text></xsl:when>
		<xsl:when test="$code = 210"><xsl:text>epigramma</xsl:text></xsl:when>
		<xsl:when test="$code = 211"><xsl:text>udvari dráma</xsl:text></xsl:when>
		<xsl:when test="$code = 212"><xsl:text>mezőgazdasági költemény</xsl:text></xsl:when>
	</xsl:choose>
</xsl:template>

<xsl:template match="v48" mode="humego">

	<xsl:text>A verset tartalmazó források közül:</xsl:text>
	<xsl:for-each select="*">
		<xsl:if test="position() > 1"><xsl:text>,</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sk'"><xsl:text> </xsl:text><xsl:value-of select="."/><xsl:text> katolikus</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sp'"><xsl:text> </xsl:text><xsl:value-of select="sp"/><xsl:text> protestáns</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'se'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> evangélikus</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sr'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> református</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'ss'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> unitárius</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'su'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> szombatos</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sm'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> muzulmán</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sv'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> világi</xsl:text></xsl:if>
		<xsl:if test="name(.) = 'sx'"><xsl:text> </xsl:text><xsl:value-of select="se"/><xsl:text> nem meghatározott</xsl:text>
		</xsl:if>
	</xsl:for-each>
</xsl:template>

<!-- <v52>
18:0022    P:0059-B
</v52> -->

<xsl:template name="hubook">
	<xsl:param name="id" />
	<xsl:param name="value" />
	<xsl:param name="bookId" />

	<xsl:variable name="book">
		<xsl:copy-of select="//rec[@id = $bookId]/*" />
	</xsl:variable>
	
	<xsl:if test="count($book) = 0 or count($book) > 1">
		<xsl:message><xsl:value-of select="$bookId"/>: error book</xsl:message>
	</xsl:if>

	<xsl:variable name="mainRec" select="//rec[v1/@value = $id]" />
	<xsl:variable name="itemMainId" select="substring($value, 4, 4)"/>
	<xsl:variable name="itemSubnote" select="substring($value, 8, 1)"/>
	<xsl:variable name="itemSubId" select="substring($value, 9, 1)"/>
	<xsl:variable name="page" select="substring($value, 14, 4)"/>
	<xsl:variable name="pageSubnote" select="substring($value, 18, 1)"/>
	<xsl:variable name="pageSubid" select="substring($value, 19)"/>

	<xsl:variable name="forrasRovidites">
		<xsl:text> </xsl:text>
		<xsl:choose>
			<xsl:when test="$book/v101/@value = 'MKEVB1'">(S </xsl:when>
			<xsl:when test="$book/v101/@value = 'MKEVB0'">(H </xsl:when>
			<xsl:when test="$book/v101/@value = 'RMG'">(HH </xsl:when>
			<xsl:when test="$book/v101/@value = 'RMNY'">(RMNy </xsl:when>
			<xsl:when test="$book/v101/@value = 'RMK1'">(RMK I </xsl:when>
		</xsl:choose>
		<xsl:value-of select="number($itemMainId)" />
		<xsl:if test="$itemSubnote = '/'">
			<xsl:value-of select="concat($itemSubnote, $itemSubId)" />
		</xsl:if>
		<xsl:if test="$itemSubnote = '-'">
			<xsl:value-of select="concat('/', $itemSubId)" />
		</xsl:if>
		<xsl:if test="$book/v55">
			<xsl:text>, [fakszimile kiadás]</xsl:text>
		</xsl:if>
		<xsl:text>)</xsl:text>
	</xsl:variable>

	<!-- KIIRATÁS -->
	<xsl:if test="count($book/v101) = 0 or count($book/v101) > 1">
		<xsl:message><xsl:value-of select="$bookId"/>: error v101 count: <xsl:value-of select="count($book/v101)"/></xsl:message>
	</xsl:if>
	<xsl:if test="count($book/v111) = 0 or count($book/v111) > 1">
		<xsl:message><xsl:value-of select="$bookId"/>: error v111 count: <xsl:value-of select="count($book/v111)"/></xsl:message>
	</xsl:if>

	<a>
		<xsl:attribute name="href">
			<xsl:value-of select="concat('BASE_PATH/book/', $book/v101/@value, '-', $book/v111/@value)"/>
		</xsl:attribute>
		<i>
			<xsl:choose>
				<!-- eredeti cím -->
				<xsl:when test="$book/v122/@value != ''"><xsl:value-of select="$book/v122/@value"/></xsl:when>
				<!-- új cím -->
				<xsl:otherwise><xsl:value-of select="$book/v121/@value"/></xsl:otherwise>
			</xsl:choose>
		</i>
	</a>

	<!-- nyomdahely -->
	<xsl:if test="not(starts-with($book/v101/@value, 'MKEVB'))">
		<xsl:text> </xsl:text>
		<xsl:choose>
			<xsl:when test="$book/v131/@value != ''"><xsl:value-of select="$book/v131/@value"/></xsl:when>
			<xsl:otherwise><xsl:text>***</xsl:text></xsl:otherwise>
		</xsl:choose>
	</xsl:if>

	<!-- idopont -->
	<xsl:text>, </xsl:text>
	<xsl:choose>
		<xsl:when test="$book/v132/@value != ''"><xsl:value-of select="$book/v132/@value"/></xsl:when>
		<xsl:otherwise><xsl:text>***</xsl:text></xsl:otherwise>
	</xsl:choose>

	<!-- felekezet -->
	<xsl:if test="$book/v142">
		<xsl:text>, </xsl:text>
		<xsl:for-each select="$book/v142">
			<xsl:if test="position() > 1">, </xsl:if>
			<xsl:value-of select="@value"/>
		</xsl:for-each>
	</xsl:if>

	<xsl:value-of select="$forrasRovidites"/>

	<xsl:variable name="mekPath">
		<xsl:choose>
			<xsl:when test="$bookId = 'RMK1-0007' or $bookId = 'RMNY-0017'">rmny/17</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0322' or $bookId = 'RMNY-0080'">rmny/80</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0033' or $bookId = 'RMNY-0109'">rmny/109</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0323' or $bookId = 'RMNY-0299'">rmny/299</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0338' or $bookId = 'RMNY-0303'">rmny/303</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0094' or $bookId = 'RMNY-0327'">rmny/327</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0105' or $bookId = 'RMNY-0340'">rmny/340</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0109' or $bookId = 'RMNY-0348'">rmny/348</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0111' or $bookId = 'RMNY-0350'">rmny/350</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0332' or $bookId = 'RMNY-0353'">rmk/1/332</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0355c' or $bookId = 'RMNY-0357'">rmny/357</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0117' or $bookId = 'RMNY-0359'">rmny/359</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0128' or $bookId = 'RMNY-0385'">rmny/385</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0131' or $bookId = 'RMNY-0386'">rmny/386</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0154' or $bookId = 'RMNY-0437'">rmny/437</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0155' or $bookId = 'RMNY-0438'">rmny/438</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0156' or $bookId = 'RMNY-0439'">rmny/439</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0159' or $bookId = 'RMNY-0441'">rmny/441</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0165' or $bookId = 'RMNY-0458'">rmny/458</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0166' or $bookId = 'RMNY-0460'">rmny/460</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0343' or $bookId = 'RMNY-0461'">rmny/461</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0169' or $bookId = 'RMNY-0462'">rmny/462</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0168' or $bookId = 'RMNY-0465'">rmny/465</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0174' or $bookId = 'RMNY-0468'">rmny/468</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0181' or $bookId = 'RMNY-0492'">rmny/492</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0182' or $bookId = 'RMNY-0493'">rmny/493</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0191' or $bookId = 'RMNY-0508'">rmny/508</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0193' or $bookId = 'RMNY-0510'">rmny/510</xsl:when>
			<xsl:when test="                         $bookId = 'RMNY-0531'">rmny/531</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0208' or $bookId = 'RMNY-0540'">rmny/540</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0361' or $bookId = 'RMNY-0594'">rmny/594</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0243' or $bookId = 'RMNY-0662'">rmny/662</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0249' or $bookId = 'RMNY-0671'">rmny/671</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0255' or $bookId = 'RMNY-0683'">rmny/683</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0257' or $bookId = 'RMNY-0686'">rmny/686</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0340' or $bookId = 'RMNY-0685'">rmny/685</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0258' or $bookId = 'RMNY-0687'">rmny/687</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0271' or $bookId = 'RMNY-0729'">rmny/729</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0280' or $bookId = 'RMNY-0774'">rmny/774</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0293' or $bookId = 'RMNY-0807'">rmny/807</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0368' or $bookId = 'RMNY-0777'">rmny/777</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0282' or $bookId = 'RMNY-0778'">rmny/778</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0298' or $bookId = 'RMK2-0277' or $bookId = 'RMNY-0815'">rmny/815</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0317' or $bookId = 'RMNY-0820'">rmny/820</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0311' or $bookId = 'RMNY-0858'">rmny/858</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0315' or $bookId = 'RMNY-0869'">rmny/869</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0403' or $bookId = 'RMNY-0945'">rmny/945</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0405' or $bookId = 'RMNY-0952'">rmny/952</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0358' or $bookId = 'RMNY-0953'">rmny/953</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0327' or $bookId = 'RMNY-0954'">rmny/954</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0362' or $bookId = 'RMNY-0956'">rmny/956</xsl:when>
			<xsl:when test="                         $bookId = 'RMNY-0957'">rmny/957</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0430' or $bookId = 'RMNY-0998'">rmny/998</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0443' or $bookId = 'RMNY-1059'">rmny/1059</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0456' or $bookId = 'RMNY-1090'">rmny/1090</xsl:when>
			<xsl:when test="                         $bookId = 'RMNY-1102'">rmny/1102</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0482' or $bookId = 'RMNY-1166'">rmny/1166</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0490' or $bookId = 'RMNY-1178'">rmny/1178</xsl:when>
			<xsl:when test="$bookId = 'RMK1-1188'                         ">rmk/1/1188</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0500' or $bookId = 'RMNY-1213'">rmny/1213</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0632' or $bookId = 'RMNY-1574'">rmny/1574</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0652' or $bookId = 'RMNY-1629'">rmny/1629</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0786' or $bookId = 'RMNY-2146'">rmny/2146</xsl:when>
			<xsl:when test="$bookId = 'RMK1-0872' or $bookId = 'RMNY-2472'">rmny/2472</xsl:when>
			<!-- Stoll -->
			<xsl:when test="$bookId = 'MKEVB1-0003'">ref/stoll1963-2005/3</xsl:when>
			<!-- Ms -->
			<xsl:when test="$bookId = 'MKEVB0-0013'">ms/hu/B1/MNy/5</xsl:when>
			<xsl:when test="$bookId = 'MKEVB0-0803'">ms/hu/B1/MNy/7</xsl:when>
			<xsl:when test="$bookId = 'MKEVB0-0016'">ms/hu/B1/MNy/12</xsl:when>
			<xsl:when test="$bookId = 'MKEVB1-0168'">ms/hu/B1/OCT_HUNG/0070</xsl:when>
			<xsl:otherwise></xsl:otherwise>
		</xsl:choose>
	</xsl:variable>

	<!-- page nr -->
	<xsl:if test="string-length($page) > 0 or string-length($mekPath) > 0">
		<xsl:choose>
			<xsl:when test="$forrasRovidites = ''"><xsl:text>p. </xsl:text></xsl:when>
			<xsl:otherwise><xsl:text> p. </xsl:text></xsl:otherwise>
		</xsl:choose>
		<xsl:choose>
			<xsl:when test="concat(number($page), '') != 'NaN'"><xsl:value-of select="number($page)"/></xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="removeLeftZeros">
					<xsl:with-param name="text" select="$page"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:if test="$pageSubnote != ''">
			<xsl:element name="sup">
				<xsl:choose>
					<xsl:when test="$pageSubid = 'A'"><xsl:text>r</xsl:text></xsl:when>
					<xsl:when test="$pageSubid = 'B'"><xsl:text>v</xsl:text></xsl:when>
					<xsl:otherwise><xsl:value-of select="$pageSubid"/></xsl:otherwise>
				</xsl:choose>
			</xsl:element>
		</xsl:if>

		<!-- MEK link -->

		<xsl:if test="$mekPath != ''">
			<xsl:call-template name="mekLink">
				<xsl:with-param name="mekPath" select="$mekPath" />
				<xsl:with-param name="itemSubId" select="$itemSubId" />
				<xsl:with-param name="page" select="$page" />
				<xsl:with-param name="pageSubid" select="$pageSubid" />
			</xsl:call-template>
		</xsl:if>
	</xsl:if>
</xsl:template>

<xsl:template name="mekLink">
	<xsl:param name="mekPath"/>
	<xsl:param name="itemSubId"/>
	<xsl:param name="page"/>
	<xsl:param name="pageSubid"/>
	<xsl:text> </xsl:text>
	<a>
		<xsl:attribute name="href">
			<xsl:text>http://mek.oszk.hu/</xsl:text>
			<xsl:value-of select="$mekPath" />
			<xsl:if test="$itemSubId and $itemSubId != ' '">
				<xsl:value-of select="concat('/', $itemSubId)"/>
			</xsl:if>
			<xsl:if test="$page and $page != ' '">
				<xsl:value-of select="concat('/', $page)"/>
			</xsl:if>
			<xsl:if test="$pageSubid">
				<xsl:value-of select="$pageSubid" />
			</xsl:if>
		</xsl:attribute>
		<xsl:text>&#187;MEK</xsl:text>
	</a>
</xsl:template>

<xsl:template match="v53" mode="rmdt">
	<xsl:choose>
		<xsl:when test="contains(@value, 'RMDT')">
			<xsl:variable name="after" select="substring-after(@value, 'RMDT')" />
			<xsl:value-of select="substring-before(@value, 'RMDT')" />
			<xsl:text>RMDT</xsl:text>
			<xsl:value-of select="substring($after, 1, 1)" />
			<xsl:text> </xsl:text>
			<xsl:choose>
				<xsl:when test="contains($after, 'SZ')">
					<xsl:text>#</xsl:text>
					<xsl:value-of select="number(substring(substring-before($after, 'SZ'), 3))" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="number(substring($after, 3))" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="@value"/>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>

<xsl:template match="v45" mode="metrd">
	<xsl:if test="position() > 1">
		<xsl:text>, </xsl:text>	
	</xsl:if>
	<xsl:variable name="counter" select="position()" />
	<xsl:variable name="ABC" select="'ABCDEFGHIJKLMNOPQRSTUVZXY'" />
	<xsl:variable name="firstChar" select="substring(@value, 1, 1)" />
	<xsl:variable name="position" select="string-length(substring-before($ABC, $firstChar))+1" />
	<xsl:variable name="v163" select="../v163[1]" />
	<xsl:variable name="r">
		<xsl:choose>
			<xsl:when test="not($v163) or ($v163/@value = '')"><xsl:text>-</xsl:text></xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="substring($v163/@value, (2*$counter)-1, 1)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:variable>
	<xsl:choose>
		<xsl:when test="($position > 0) and ($r = '-')">
			<xsl:value-of select="lower-case($firstChar)"/>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="$firstChar"/>
		</xsl:otherwise>
	</xsl:choose>
	<xsl:variable name="length" select="string-length(@value)"/>

	<xsl:if test="$length >= 4">
		<xsl:value-of select="number(substring(@value,3,2))"/>
	</xsl:if>
	<xsl:if test="$length > 4">
		<xsl:text>(</xsl:text><xsl:value-of select="number(substring(@value,5,2))"/>
	</xsl:if>
	<xsl:if test="$length > 4">
		<xsl:text>,</xsl:text><xsl:value-of select="number(substring(@value,7,2))"/>
	</xsl:if>
	<xsl:if test="$length > 8">
		<xsl:text>,</xsl:text><xsl:value-of select="number(substring(@value,9,2))"/>
	</xsl:if>
	<xsl:if test="$length > 10">
		<xsl:text>,</xsl:text><xsl:value-of select="number(substring(@value,11,2))"/>
	</xsl:if>
	<xsl:if test="$length > 4">
		<xsl:text>)</xsl:text>
	</xsl:if>
	
</xsl:template>


<xsl:template name="removeLeftZeros">
	<xsl:param name="text"/>
	<xsl:message><xsl:value-of select="$text"/></xsl:message>
	
	<xsl:choose>
		<xsl:when test="starts-with($text, '0')">
			<xsl:call-template name="removeLeftZeros">
				<xsl:with-param name="text" select="substring($text, 2)"/> <!-- , string-length($text) -->
			</xsl:call-template>
		</xsl:when>
		<xsl:otherwise><xsl:value-of select="$text"/></xsl:otherwise>
	</xsl:choose>
	
</xsl:template>

</xsl:stylesheet>
